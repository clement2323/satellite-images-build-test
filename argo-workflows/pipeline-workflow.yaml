apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parallel-preprocessing-
spec:
  entrypoint: main
  arguments:
    parameters:
      - name: preprocessing-conf-list
        value: '[
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2020", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2020", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2019", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2019", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2017", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MAYOTTE", "year": "2017", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},

            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2020", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2020", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2019", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2019", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2018", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "GUADELOUPE", "year": "2018", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},

            { "src": "PLEIADES", "dep": "MARTINIQUE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MARTINIQUE", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MARTINIQUE", "year": "2018", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "MARTINIQUE", "year": "2018", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"},

            { "src": "PLEIADES", "dep": "REUNION", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "250", "from_s3": "0"},
            { "src": "PLEIADES", "dep": "REUNION", "year": "2022", "nb_bands": "3", "labeler": "BDTOPO", "task": "segmentation", "tile_size": "125", "from_s3": "0"}
            ]'
  templates:
    # Entrypoint DAG template
    - name: main
      dag:
        tasks:
          # Task 0: Start pipeline
          - name: start-pipeline
            template: start-pipeline-wt
          # Task 1: Preprocess images
          - name: run-preprocessing-with-params
            dependencies: [ start-pipeline ]
            template: run-preprocessing-wt
            arguments:
              parameters:
                - name: src
                  value: "{{item.src}}"
                - name: dep
                  value: "{{item.dep}}"
                - name: year
                  value: "{{item.year}}"
                - name: nb_bands
                  value: "{{item.nb_bands}}"
                - name: labeler
                  value: "{{item.labeler}}"
                - name: task
                  value: "{{item.task}}"
                - name: tile_size
                  value: "{{item.tile_size}}"
                - name: from_s3
                  value: "{{item.from_s3}}"
            # Pass the inputs to the task using "withParam"
            withParam: "{{workflow.parameters.preprocessing-conf-list}}"

    # Now task container templates are defined
    # Worker template for task 0 : start-pipeline
    - name: start-pipeline-wt
      inputs:
      container:
        image: busybox
        command: [ sh, -c ]
        args: [ "echo Starting pipeline" ]

    # Worker template for task-1 : train model with params
    - name: run-preprocessing-wt
      inputs:
        parameters:
          - name: src
          - name: dep
          - name: year
          - name: nb_bands
          - name: labeler
          - name: task
          - name: tile_size
          - name: from_s3
      container:
        image: inseefrlab/satellite-images-preprocess:v0.0.2
        imagePullPolicy: Always
        command: ["/bin/bash", -c]
        args: ["git clone https://github.com/InseeFrLab/satellite-images-preprocess.git &&
              cd satellite-images-preprocess/ &&
              export MC_HOST_s3=https://$AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY@$AWS_S3_ENDPOINT &&
              python src/preprocess-satellite-images.py {{inputs.parameters.src}} {{inputs.parameters.dep}} {{inputs.parameters.year}} {{inputs.parameters.nb_bands}} {{inputs.parameters.labeler}} {{inputs.parameters.task}} {{inputs.parameters.tile_size}} {{inputs.parameters.from_s3}} &&
              mc cp -r data/data-preprocessed/ s3/projet-slums-detection/data-preprocessed/"]
        env:
          # env var for s3 connexion
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: my-s3-creds
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: my-s3-creds
                key: secretKey
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_S3_ENDPOINT
            value: minio.lab.sspcloud.fr
